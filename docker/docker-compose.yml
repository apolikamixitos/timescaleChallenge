version: '2.4'

services:
  timescale-app:
    image: ${TIMESCALE_APP_DOCKER_IMAGE}
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        NODE_ENV: development
    depends_on:
      timescale-instance:
        condition: service_healthy
    environment:
      - PGSQL_HOST=${PGSQL_HOST}
      - PGSQL_PORT=${PGSQL_PORT}
      - PGSQL_USERNAME=${PGSQL_USERNAME}
      - PGSQL_PASSWORD=${PGSQL_PASSWORD}
      - PGSQL_DATABASE=${PGSQL_DATABASE}
      - MAX_CONCURRENT_WORKERS=${MAX_CONCURRENT_WORKERS}
    volumes:
      - "${PGSQL_DATA_PATH}:/app/data"
  timescale-instance:
    image: timescale/timescaledb:latest-pg12
    environment:
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
      POSTGRES_USER: ${PGSQL_USERNAME}
    ports:
      - "${PGSQL_EXTERNAL_PORT}:${PGSQL_PORT}"
    volumes:
      - ${PGSQL_DATA_PATH}:/data
      - ${PGSQL_INIT_SCHEMA}:/docker-entrypoint-initdb.d/1-schema.sql
      - ${PGSQL_INIT_DATA}:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      # Preferrably, we use this command to watch the health of the node
      # test: ["CMD", "pg_isready", "-U", "postgres"]
      # We have to check if the files were imported successfully
      test: ["CMD", "psql", "-U", "${PGSQL_USERNAME}", "-d", "${PGSQL_DATABASE}", "-c", "select COUNT(host) from cpu_usage;"]
      interval: 10s
      timeout: 5s
      retries: 5
